---
import { getSettings } from '@lib/sanity/companySettings';
import '../assets/scss/globals.scss';
import SiteMeta from '../components/SiteMeta.astro';
import { ViewTransitions } from 'astro:transitions';
import { imageBuilder } from '@lib/sanity/imageBuilder';

const canonicalURL = Astro.site ? new URL(Astro.url.pathname, Astro.site) : '';

const { companyName, ogImage, overview } = await getSettings();

const socialImageURL = imageBuilder(ogImage, 'ogImage');

const {
  title = companyName || 'Ambient Lighting Limited',
  description = overview || 'Enhancing Spaces with Exquisite Mood Lighting',
  author = 'David Abell',
} = Astro.props;
---

<html lang="en" dir="ltr">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />

    <!-- favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <SiteMeta title={title} description={description} url={canonicalURL} image={socialImageURL || ''} author={author} />
    <script is:inline>
      // Setup any saved theme custom properties in :root
      function setRootThemeProperties() {
        for (let i = 0; i <= 12; i++) {
          const storePrimaryProperty = localStorage.getItem(`--primary-${i}`);
          const storeSecondaryProperty = localStorage.getItem(`--secondary-${i}`);

          if (storePrimaryProperty) {
            document.documentElement.style.setProperty(`--primary-${i}`, storePrimaryProperty);
          }
          if (storeSecondaryProperty) {
            document.documentElement.style.setProperty(`--secondary-${i}`, storeSecondaryProperty);
          }
        }
      }

      // Execution
      setRootThemeProperties();
      document.addEventListener('astro:after-swap', setRootThemeProperties);
    </script>
    <ViewTransitions />
  </head>
  <body>
    <slot />
    <style lang="scss" is:global>
      // theme settings
      :root {
        --radius-small: 3px;
        --radius-large: 6px;
        --gap-default: 2rem;
        --font-measure: 70ch;
        --font-family-default: 'Open Sans', sans-serif;
        --font-family-special: 'Open Sans', sans-serif;
        // light theme
        --font-color: var(--neutral-12);
        --action-color: var(--primary-10);
        --action-color-state: var(--secondary-10);
        --background: var(--primary-0);
        --primary-background: var(--primary-0);
        --secondary-background: var(--secondary-0);
        --neutral-background: var(--neutral-1);
        // dark theme
        --font-color-dark: var(--neutral-0);
        --action-color-dark: var(--secondary-4);
        --action-color-state-dark: var(--secondary-2);
        --background-dark: var(--dark-100);
        --primary-background-dark: var(--primary-10);
        --secondary-background-dark: var(--secondary-10);
        --neutral-background-dark: var(--neutral-12);
      }

      // dark color scheme overrides
      .darkmode {
        --font-color: var(--font-color-dark);
        --action-color: var(--action-color-dark);
        --action-color-state: var(--action-color-state-dark);
        --background: var(--background-dark);
        --primary-background: var(--primary-background-dark);
        --secondary-background: var(--secondary-background-dark);
        --neutral-background: var(--neutral-background-dark);
      }

      // sticky footer on low content pages
      html,
      body {
        height: 100%;
        overflow-x: hidden;
      }

      body {
        display: flex;
        flex-direction: column;
        color: var(--font-color);
        background-color: var(--background);
        position: relative;

        main {
          flex: 1 0 auto;
        }

        footer {
          flex-shrink: 0;
        }
      }

      pre {
        padding: 1rem;
        border-radius: 0.35rem;
        border: 2px solid var(--action-color);
      }

      body .pagination a {
        &:hover,
        &:focus-visible {
          background-color: var(--action-color-state);

          svg path {
            stroke: white;
          }
        }
      }

      dialog {
        color: var(--font-color);
        background-color: var(--background);
      }

      [data-icon] {
        width: 30px;
      }
    </style>
  </body>
</html>
