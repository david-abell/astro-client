<div class="container">
  <div class="content__grid md:text-2xl">
    <slot />
  </div>
</div>

<style lang="scss" is:global>
  @use '../assets/scss/base/breakpoint' as *;

  .content__grid {
    --background: var(--primary-1);
    --background-2: var(--primary-9);
    --action-color: var(--secondary-4);
    --action-color-state: var(--secondary-12);
  }

  .darkmode .content__grid {
    --background: var(--primary-2);
    --background-2: var(--primary-11);
    --action-color: var(--secondary-11);
    --action-color-state: var(--secondary-12);
  }

  .content__grid {
    color: var(--primary-12);

    display: flex;
    flex-direction: column;
    gap: 6rem;

    :where(.content-media__outer) {
      background-color: var(--background);
      border-radius: 8px;
    }

    .content-media__outer:nth-child(even) {
      --action-color: var(--secondary-2);

      background-color: var(--background-2);
      color: var(--neutral-0);
    }

    .content-media__grid {
      gap: 24px;
      padding: 0;
    }

    .content-media__outer {
      margin: 0;
      padding: 36px;
    }

    .content-media__outer > .container {
      padding: 0;
    }

    @include breakpoint(large) {
      display: grid;
      align-items: center;
      grid-template-columns: repeat(2, minmax(0, 1fr));
      gap: 0;
      margin: 0;

      img {
        margin-bottom: auto;
        aspect-ratio: 2/3;
      }

      // resets .content-media__outer:nth-child(even) {...} for breakpoint styles
      .content-media__outer:nth-child(n) {
        background-color: var(--background);
        color: var(--neutral-12);
      }

      .content-media__outer {
        padding: 48px;
        height: 100%;
      }

      .content-media__grid {
        gap: 48px;
        grid-template-columns: repeat(5, 1fr);
      }

      :where(.content-media__outer) {
        background-color: var(--background);
        border-radius: 0px;
      }

      .content-media__grid > div {
        grid-column: 3 / span 3;
      }
      .content-media__grid[data-reversed] > div {
        grid-column: 1 / span 3;
      }
      .content-media__grid > img {
        grid-column: 1 / span 2;
      }
      .content-media__grid[data-reversed] > img {
        grid-column: 4 / span 2;
      }

      .content-media__outer:first-child,
      .content-media__outer:nth-child(4n),
      .content-media__outer:nth-child(4n + 1) {
        background-color: var(--background-2);
        color: var(--neutral-0);
      }
    }
  }
</style>
